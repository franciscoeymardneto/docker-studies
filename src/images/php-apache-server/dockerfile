# Define variables for the PHP version and package version numbers
ARG PHP_VERSION=7.4

# Use the official PHP and Apache image as the base image for the specified version
FROM php:7.4-apache

#enviorment varible to define the enviorment
ENV APP_ENV=${APP_ENV:-development}

# Add the install-php-extensions script for add php extensios
ADD https://github.com/mlocati/docker-php-extension-installer/releases/latest/download/install-php-extensions /usr/local/bin/

# Install the necessary packages 
RUN apt-get update && \
    apt-get clean && \
    chmod +x /usr/local/bin/install-php-extensions && \
    install-php-extensions \
    calendar \
    #   common \
    ctype \
    curl \
    date \
    dom \
    exif \
    ffi \
    fileinfo \
    filter \
    ftp \
    gd \
    gettext \
    hash \
    iconv \
    json \
    libxml \
    mbstring \
    mysqli \
    mysqlnd \
    opcache \
    openssl \
    pcre \
    pdo \
    pdo_mysql \
    pdo_sqlite \
    phar \
    posix \
    readline \
    reflection \
    session \
    shmop \
    simplexml \
    sockets \
    sodium \
    spl \
    sqlite3 \
    standard \
    sysvmsg \
    sysvsem \
    sysvshm \
    tokenizer \
    xml \
    xmlreader \
    xmlwriter \
    xsl \
    zip

# RUN apt-get install -y \
#     zlib1g-dev \
#     vim \
#     nano \
#     git \
#     libpng-dev \
#     libonig-dev \
#     libxml2-dev \
#     libzip-dev \
#     zip \
#     unzip && \
#     apt-get clean




# Enable the necessary Apache modules
# RUN a2enmod rewrite && \
#     a2enmod headers && \
#     a2enmod expires && \
#     a2enmod ssl \
#    a2enconf ssl-params

# allow apache to read each project configs instead a global
# RUN rpl "AllowOverride None" "AllowOverride All" /etc/apache2/apache2.conf

#copy php config init
COPY "./php.ini.txt" "$PHP_INI_DIR/php.ini"

# configs depend on enviorment
RUN if [ "$APP_ENV" = "production" ] ; then \
    mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini" \
    echo "display_errors = Off" >> "$PHP_INI_DIR/php.ini" \
    echo "error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT & ~E_NOTICE" >> "$PHP_INI_DIR/php.ini" \
    else \
    echo "display_errors = On" >> "$PHP_INI_DIR/php.ini" \
    echo "error_reporting = E_ALL" >> "$PHP_INI_DIR/php.ini" \ 
    ; fi

# Set the document root directory
ENV APACHE_DOCUMENT_ROOT /var/www

# # Copy your application code into the container
# COPY /service/www/site.host.soft /var/www/site.host.soft
# COPY /service/www/help.host.soft /var/www/help.host.soft
# COPY /service/www/api.host.soft /var/www/api.host.soft

# # Copy applications config files to sites available 
# COPY /service/www/site.host.soft/site.host.soft.conf /etc/apache2/sites-available
# COPY /service/www/help.host.soft/help.host.soft.conf /etc/apache2/sites-available
# COPY /service/www/api.host.soft/api.host.soft.conf /etc/apache2/sites-available


# # Set up SSL certificates
# RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
#     -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=site.host.soft" \
#     -keyout /etc/ssl/private/site.host.soft.key \
#     -out /etc/ssl/certs/site.host.soft.crt
# RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
#     -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=help.host.soft" \
#     -keyout /etc/ssl/private/help.host.soft.key \
#     -out /etc/ssl/certs/help.host.soft.crt
# RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
#     -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=api.host.soft" \
#     -keyout /etc/ssl/private/api.host.soft.key \
#     -out /etc/ssl/certs/api.host.soft.crt

# # Copy SSL configuration files to container
# COPY ssl-params.conf /etc/apache2/conf-available/
# COPY default-ssl-site.host.soft.conf /etc/apache2/sites-available/
# COPY default-ssl-help.host.soft.conf /etc/apache2/sites-available/
# COPY default-ssl-api.host.soft.conf /etc/apache2/sites-available/

# Enable SSL sites
# RUN a2ensite default-ssl-site.host.soft.conf
# RUN a2ensite default-ssl-help.host.soft.conf
# RUN a2ensite default-ssl-api.host.soft.conf

# Set the working directory to your application code
WORKDIR /var/www

# Expose port 80 for HTTP traffic
EXPOSE 80
EXPOSE 443

# Start Apache when the container starts
CMD ["apache2-foreground"]
