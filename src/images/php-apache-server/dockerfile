# Define variables for the PHP version and package version numbers
ARG PHP_VERSION=7.4

# Use the official PHP and Apache image as the base image for the specified version
FROM php:${PHP_VERSION}-apache

#enviorment varible to define the enviorment
ENV APP_ENV=${APP_ENV:-development}

# Install the necessary packages using apt-get
RUN apt-get update && \
    apt-get install -y \
    libapache2-mod-php${PHP_VERSION} \
    php${PHP_VERSION}-calendar \
    php${PHP_VERSION}-common \
    php${PHP_VERSION}-ctype \
    php${PHP_VERSION}-curl \
    php${PHP_VERSION}-date \
    php${PHP_VERSION}-dom \
    php${PHP_VERSION}-exif \
    php${PHP_VERSION}-ffi \
    php${PHP_VERSION}-fileinfo \
    php${PHP_VERSION}-filter \
    php${PHP_VERSION}-ftp \
    php${PHP_VERSION}-gd \
    php${PHP_VERSION}-gettext \
    php${PHP_VERSION}-hash \
    php${PHP_VERSION}-iconv \
    php${PHP_VERSION}-json \
    php${PHP_VERSION}-libxml \
    php${PHP_VERSION}-mbstring \
    php${PHP_VERSION}-mysqli \
    php${PHP_VERSION}-mysqlnd \
    php${PHP_VERSION}-opcache \
    php${PHP_VERSION}-openssl \
    php${PHP_VERSION}-pcre \
    php${PHP_VERSION}-pdo \
    php${PHP_VERSION}-pdo_mysql \
    php${PHP_VERSION}-pdo_sqlite \
    php${PHP_VERSION}-phar \
    php${PHP_VERSION}-posix \
    php${PHP_VERSION}-readline \
    php${PHP_VERSION}-reflection \
    php${PHP_VERSION}-session \
    php${PHP_VERSION}-shmop \
    php${PHP_VERSION}-simplexml \
    php${PHP_VERSION}-sockets \
    php${PHP_VERSION}-sodium \
    php${PHP_VERSION}-spl \
    php${PHP_VERSION}-sqlite3 \
    php${PHP_VERSION}-standard \
    php${PHP_VERSION}-sysvmsg \
    php${PHP_VERSION}-sysvsem \
    php${PHP_VERSION}-sysvshm \
    php${PHP_VERSION}-tokenizer \
    php${PHP_VERSION}-xml \
    php${PHP_VERSION}-xmlreader \
    php${PHP_VERSION}-xmlwriter \
    php${PHP_VERSION}-xsl \
    php${PHP_VERSION}-zip \
    zlib1g-dev \
    vim \
    nano \
    git \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip

# Enable the necessary Apache modules
RUN a2enmod rewrite && \
    a2enmod headers && \
    a2enmod expires \
    a2enmod ssl

# allow apache to read each project configs instead a global
RUN rpl "AllowOverride None" "AllowOverride All" /etc/apache2/apache2.conf

# configs depend on enviorment
RUN if [ "$APP_ENV" = "production" ] ; then \
        mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini" \
        echo "display_errors = Off" >> "$PHP_INI_DIR/php.ini" \
        echo "error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT & ~E_NOTICE" >> "$PHP_INI_DIR/php.ini" \
    else \
       echo "display_errors = On" >> "$PHP_INI_DIR/php.ini" \
       echo "error_reporting = E_ALL" >> "$PHP_INI_DIR/php.ini" \ 
    ; fi

# Set the document root directory
ENV APACHE_DOCUMENT_ROOT /var/www

# Copy your application code into the container
# COPY ./../../service/www/site.host.soft /var/www/site.host.soft
# COPY ./../../service/www/help.host.soft /var/www/help.host.soft
# COPY ./../../service/www/api.host.soft /var/www/api.host.soft

# Copy applications config files to sites available 
COPY ./../../service/www/site.host.soft/site.host.soft.conf /etc/apache2/sites-available
COPY ./../../service/www/help.host.soft/help.host.soft.conf /etc/apache2/sites-available
COPY ./../../service/www/api.host.soft/api.host.soft.conf /etc/apache2/sites-available







# Set up SSL certificates
RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
    -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=site.host.soft" \
    -keyout /etc/ssl/private/site.host.soft.key \
    -out /etc/ssl/certs/site.host.soft.crt
RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
    -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=help.host.soft" \
    -keyout /etc/ssl/private/help.host.soft.key \
    -out /etc/ssl/certs/help.host.soft.crt
RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
    -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=api.host.soft" \
    -keyout /etc/ssl/private/api.host.soft.key \
    -out /etc/ssl/certs/api.host.soft.crt

# Copy SSL configuration files to container
COPY ssl-params.conf /etc/apache2/conf-available/
COPY default-ssl-site.host.soft.conf /etc/apache2/sites-available/
COPY default-ssl-help.host.soft.conf /etc/apache2/sites-available/
COPY default-ssl-api.host.soft.conf /etc/apache2/sites-available/

# Enable SSL
RUN a2enmod headers
RUN a2enmod ssl
RUN a2enconf ssl-params
RUN a2ensite default-ssl-site.host.soft.conf
RUN a2ensite default-ssl-help.host.soft.conf
RUN a2ensite default-ssl-api.host.soft.conf

# Expose ports
EXPOSE 80
EXPOSE 443



# Set the working directory to your application code
WORKDIR /var/www

# Expose port 80 for HTTP traffic
EXPOSE 80
EXPOSE 443

# Start Apache when the container starts
CMD ["apache2-foreground"]
