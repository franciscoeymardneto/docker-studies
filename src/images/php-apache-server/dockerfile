# Define variables for the PHP version and package version numbers
ARG PHP_VERSION=7.4

# Use the official PHP and Apache image as the base image for the specified version
FROM php:7.4-apache

#enviorment varible to define the enviorment
ENV APP_ENV=${APP_ENV:-development}

# Install the necessary packages using apt-get
RUN apt-get update && \
    apt-get clean && \
    apt-get install -y \
    php7.4-calendar \
    php7.4-common \
    php7.4-ctype \
    php7.4-curl \
    php7.4-date \
    php7.4-dom \
    php7.4-exif \
    php7.4-ffi \
    php7.4-fileinfo \
    php7.4-filter \
    php7.4-ftp \
    php7.4-gd \
    php7.4-gettext \
    php7.4-hash \
    php7.4-iconv \
    php7.4-json \
    php7.4-libxml \
    php7.4-mbstring \
    php7.4-mysqli \
    php7.4-mysqlnd \
    php7.4-opcache \
    php7.4-openssl \
    php7.4-pcre \
    php7.4-pdo \
    php7.4-pdo_mysql \
    php7.4-pdo_sqlite \
    php7.4-phar \
    php7.4-posix \
    php7.4-readline \
    php7.4-reflection \
    php7.4-session \
    php7.4-shmop \
    php7.4-simplexml \
    php7.4-sockets \
    php7.4-sodium \
    php7.4-spl \
    php7.4-sqlite3 \
    php7.4-standard \
    php7.4-sysvmsg \
    php7.4-sysvsem \
    php7.4-sysvshm \
    php7.4-tokenizer \
    php7.4-xml \
    php7.4-xmlreader \
    php7.4-xmlwriter \
    php7.4-xsl \
    php7.4-zip \
    zlib1g-dev \
    vim \
    nano \
    git \
    libpng-dev \
    libonig-dev \
    libxml2-dev \
    libzip-dev \
    zip \
    unzip

# Enable the necessary Apache modules
RUN a2enmod rewrite && \
    a2enmod headers && \
    a2enmod expires \
    a2enmod ssl \
    a2enconf ssl-params

# allow apache to read each project configs instead a global
RUN rpl "AllowOverride None" "AllowOverride All" /etc/apache2/apache2.conf

#copy php config init
COPY "./php.ini.txt" "$PHP_INI_DIR/php.ini"

# configs depend on enviorment
RUN if [ "$APP_ENV" = "production" ] ; then \
        mv "$PHP_INI_DIR/php.ini-production" "$PHP_INI_DIR/php.ini" \
        echo "display_errors = Off" >> "$PHP_INI_DIR/php.ini" \
        echo "error_reporting = E_ALL & ~E_DEPRECATED & ~E_STRICT & ~E_NOTICE" >> "$PHP_INI_DIR/php.ini" \
    else \
       echo "display_errors = On" >> "$PHP_INI_DIR/php.ini" \
       echo "error_reporting = E_ALL" >> "$PHP_INI_DIR/php.ini" \ 
    ; fi

# Set the document root directory
ENV APACHE_DOCUMENT_ROOT /var/www

# # Copy your application code into the container
# COPY /service/www/site.host.soft /var/www/site.host.soft
# COPY /service/www/help.host.soft /var/www/help.host.soft
# COPY /service/www/api.host.soft /var/www/api.host.soft

# # Copy applications config files to sites available 
# COPY /service/www/site.host.soft/site.host.soft.conf /etc/apache2/sites-available
# COPY /service/www/help.host.soft/help.host.soft.conf /etc/apache2/sites-available
# COPY /service/www/api.host.soft/api.host.soft.conf /etc/apache2/sites-available


# # Set up SSL certificates
# RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
#     -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=site.host.soft" \
#     -keyout /etc/ssl/private/site.host.soft.key \
#     -out /etc/ssl/certs/site.host.soft.crt
# RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
#     -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=help.host.soft" \
#     -keyout /etc/ssl/private/help.host.soft.key \
#     -out /etc/ssl/certs/help.host.soft.crt
# RUN openssl req -new -newkey rsa:4096 -days 365 -nodes -x509 \
#     -subj "/C=US/ST=State/L=City/O=Organization/OU=Department/CN=api.host.soft" \
#     -keyout /etc/ssl/private/api.host.soft.key \
#     -out /etc/ssl/certs/api.host.soft.crt

# # Copy SSL configuration files to container
# COPY ssl-params.conf /etc/apache2/conf-available/
# COPY default-ssl-site.host.soft.conf /etc/apache2/sites-available/
# COPY default-ssl-help.host.soft.conf /etc/apache2/sites-available/
# COPY default-ssl-api.host.soft.conf /etc/apache2/sites-available/

# Enable SSL sites
RUN a2ensite default-ssl-site.host.soft.conf
RUN a2ensite default-ssl-help.host.soft.conf
RUN a2ensite default-ssl-api.host.soft.conf

# Set the working directory to your application code
WORKDIR /var/www

# Expose port 80 for HTTP traffic
EXPOSE 80
EXPOSE 443

# Start Apache when the container starts
CMD ["apache2-foreground"]
